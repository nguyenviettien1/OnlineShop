@model OnlineShop.Models.RegisterModel
@using BotDetect.Web.Mvc;
<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl" rel="stylesheet" type="text/css" />
@{ MvcCaptcha registerCaptcha = new MvcCaptcha("registerCaptcha");}
@{
    ViewBag.Title = "Đăng ký";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section jsFooter{
    <script src="~/assets/client/js/controller/userController.js"></script>
}
<style>
    .register-back {
        background: linear-gradient(to bottom, #99ffcc 0%, #ffffff 100%);
    }
    .register-css {
        width: 600px;
        position: relative;
        margin: 0 auto;
        font-family: 'Times New Roman', Times, serif;
    }
</style>
<div class="content register-back">
    <div class="section group">

        <div class="contact-form register-css">
            @using (Html.BeginForm("Register", "User", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2>Đăng ký thành viên</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "error-danger" })
                @if (ViewBag.Success != null)
                {
                    <div>@ViewBag.Success</div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.UserName, new { htmlAttributes = new { @class = "textbox" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "error-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "error-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "passwordbox" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "error-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "textbox" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "error-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Address, new { htmlAttributes = new { @class = "textbox" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "error-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProvinceID, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.DropDownList("ProvinceID", new SelectList(new string[] { }), new { htmlAttributes = new { @class = "textbox", @id = "ddlProvince" } })
                        @Html.ValidationMessageFor(model => model.ProvinceID, "", new { @class = "error-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.DropDownList("DistrictID", new SelectList(new string[] { }), new { htmlAttributes = new { @class = "textbox", @id = "ddlDistrict" } })
                        @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "error-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Phone, new { htmlAttributes = new { @class = "textbox" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "error-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "textbox" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "error-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.Captcha(registerCaptcha)
                        @Html.TextBox("CaptchaCode")
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Đăng ký" class="btn btn-success" />
                    </div>
                </div>
            </div>
            }
        </div>
    </div>


</div>
